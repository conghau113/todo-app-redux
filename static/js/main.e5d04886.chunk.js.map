{"version":3,"sources":["components/Todo/index.js","redux/actions.js","redux/selectors.js","components/TodoList/index.js","components/Filters/index.js","App.js","components/Filters/FiltersSlice.js","components/TodoList/todosSlice.js","redux/reducer.js","redux/store.js","index.js"],"names":["priorityColorMapping","High","Medium","Low","Todo","name","prioriry","completed","id","dispatch","useDispatch","useState","checked","setChecked","justify","style","marginBottom","opacity","textDecoration","onChange","type","payload","color","margin","todosRemeaningSelector","createSelector","state","todoList","filters","status","search","priorities","searchText","filter","todo","length","includes","priority","TodoList","todoName","setTodoName","setPriority","useSelector","height","span","overflowY","map","Group","display","compact","value","e","target","defaultValue","Option","label","onClick","uuidv4","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","placeholder","sm","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","initState","filtersReducer","action","console","log","todosReducer","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"wVAKMA,EAAuB,CAC3BC,KAAM,MACNC,OAAQ,OACRC,IAAK,QAGQ,SAASC,EAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,UAAWC,EAAM,EAANA,GAClDC,EAAWC,cACjB,EAA8BC,mBAASJ,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAOA,OACE,eAAC,IAAD,CACEC,QAAQ,gBACRC,MAAK,aACHC,aAAc,GACVJ,EAAU,CAAEK,QAAS,GAAKC,eAAgB,gBAAmB,CAAC,GAJtE,UAOE,cAAC,IAAD,CAAUN,QAASA,EAASO,SAbT,WACrBN,GAAYD,GACZH,ECIK,CACLW,KAAM,2BACNC,QDN0Bb,GAC3B,EAUG,SACGH,IAEH,cAAC,IAAD,CAAKiB,MAAOtB,EAAqBM,GAAWS,MAAO,CAAEQ,OAAQ,GAA7D,SACGjB,MAIR,C,aE9BYkB,EAAyBC,aALN,SAACC,GAAD,OAAWA,EAAMC,QAAjB,IACI,SAACD,GAAD,OAAWA,EAAME,QAAQC,MAAzB,IACF,SAACH,GAAD,OAAWA,EAAME,QAAQE,MAAzB,IACM,SAACJ,GAAD,OAAWA,EAAME,QAAQG,UAAzB,IAOtC,SAACJ,EAAUE,EAAQG,EAAYD,GAC7B,OAAOJ,EAASM,QAAO,SAACC,GAEtB,MAAe,QAAXL,EAGKE,EAAWI,OACdD,EAAK7B,KAAK+B,SAASJ,IAAeD,EAAWK,SAASF,EAAKG,UAC3DH,EAAK7B,KAAK+B,SAASJ,GAGvBE,EAAK7B,KAAK+B,SAASJ,KACP,cAAXH,EAAyBK,EAAK3B,WAAa2B,EAAK3B,cAChDwB,EAAWI,QAASJ,EAAWK,SAASF,EAAKG,UAEjD,GACF,ICnBY,SAASC,IACtB,MAAgC3B,qBAAhC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAAgC7B,mBAAS,UAAzC,mBAAO0B,EAAP,KAAiBI,EAAjB,KACMhC,EAAWC,cAGXiB,EAAWe,YAAYlB,GAyB7B,OACE,eAAC,IAAD,CAAKT,MAAO,CAAE4B,OAAQ,qBAAtB,UACE,cAAC,IAAD,CAAKC,KAAM,GAAI7B,MAAO,CAAE4B,OAAQ,oBAAqBE,UAAW,QAAhE,SAIGlB,EAASmB,KAAI,SAACZ,GAAD,OACZ,cAAC9B,EAAD,CACEI,GAAM0B,EAAK1B,GAEXH,KAAM6B,EAAK7B,KACXC,SAAU4B,EAAKG,SACf9B,UAAW2B,EAAK3B,WAHX2B,EAAK1B,GAHA,MAUhB,cAAC,IAAD,CAAKoC,KAAM,GAAX,SACE,eAAC,IAAMG,MAAP,CAAahC,MAAO,CAAEiC,QAAS,QAAUC,SAAO,EAAhD,UACE,cAAC,IAAD,CAAOC,MAAOX,EAAUpB,SAzBN,SAACgC,GACzBX,EAAYW,EAAEC,OAAOF,MACtB,IAwBO,eAAC,IAAD,CACEG,aAAa,SACbH,MAAOb,EACPlB,SA1BmB,SAAC+B,GAC5BT,EAAYS,EACb,EAqBO,UAKE,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACE,cAAC,IAAD,CAAKjC,MAAM,MAAX,oBAEF,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACE,cAAC,IAAD,CAAKjC,MAAM,OAAX,sBAEF,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACE,cAAC,IAAD,CAAKjC,MAAM,OAAX,sBAGJ,cAAC,IAAD,CAAQF,KAAK,UAAUoC,QAxDF,WAE3B/C,EFlBK,CACLW,KAAM,mBACNC,QEiBU,CACNb,GAAIiD,cACJpD,KAAMkC,EACNF,SAAUA,EACV9B,WAAW,KAIfiC,EAAY,IACZC,EAAY,SACb,EA2CO,wBAOT,C,aC3EOiB,EAAWC,IAAXD,OAEO,SAASE,IACtB,IAAMnD,EAAWC,cAEjB,EAAoCC,mBAAS,IAA7C,mBAAOqB,EAAP,KAAmB6B,EAAnB,KACA,EAAwClD,mBAAS,OAAjD,mBAAOmD,EAAP,KAAqBC,EAArB,KACA,EAAgDpD,mBAAS,IAAzD,mBAAOqD,EAAP,KAAyBC,EAAzB,KAiBA,OACE,eAAC,IAAD,CAAKnD,QAAQ,SAAb,UACE,eAAC,IAAD,CAAK8B,KAAM,GAAX,UACE,cAAC,IAAWsB,UAAZ,CACEnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD3D,oBAKA,cAACV,EAAD,CACEW,YAAY,oBACZnB,MAAOlB,EACPb,SA1BuB,SAACgC,GAC9BU,EAAcV,EAAEC,OAAOF,OACvBzC,EHRK,CACLW,KAAM,6BACNC,QGM4B8B,EAAEC,OAAOF,OACtC,OA0BG,eAAC,IAAD,CAAKoB,GAAI,GAAT,UACE,cAAC,IAAWJ,UAAZ,CACEnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD3D,8BAKA,eAAC,IAAMrB,MAAP,CAAaG,MAAOY,EAAc3C,SA9Bb,SAACgC,GAC1BY,EAAgBZ,EAAEC,OAAOF,OACzBzC,EHNK,CACLW,KAAM,6BACNC,QGI4B8B,EAAEC,OAAOF,OACtC,EA2BK,UACE,cAAC,IAAD,CAAOA,MAAM,MAAb,iBACA,cAAC,IAAD,CAAOA,MAAM,YAAb,uBACA,cAAC,IAAD,CAAOA,MAAM,OAAb,yBAGJ,eAAC,IAAD,CAAKoB,GAAI,GAAT,UACE,cAAC,IAAWJ,UAAZ,CACEnD,MAAO,CAAEoD,WAAY,OAAQnD,aAAc,EAAGoD,UAAW,IAD3D,gCAKA,eAAC,IAAD,CACEG,KAAK,WACLC,YAAU,EACVH,YAAY,gBACZtD,MAAO,CAAE0D,MAAO,QAChBvB,MAASc,EACT7C,SA3CqB,SAAC+B,GAC5Be,EAAoBf,GACpBzC,EHCK,CACLW,KAAM,+BACNC,QGH8B6B,GAC/B,EAkCK,UAQE,cAAC,IAAOI,OAAR,CAAeJ,MAAM,OAAOK,MAAM,OAAlC,SACE,cAAC,IAAD,CAAKjC,MAAM,MAAX,oBAEF,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,SAASK,MAAM,SAApC,SACE,cAAC,IAAD,CAAKjC,MAAM,OAAX,sBAEF,cAAC,IAAOgC,OAAR,CAAeJ,MAAM,MAAMK,MAAM,MAAjC,SACE,cAAC,IAAD,CAAKjC,MAAM,OAAX,2BAMX,CC7ED,IAAQoD,EAAUC,IAAVD,MAyBOE,MAvBf,WACE,OACE,sBACE7D,MAAO,CACL0D,MAAO,IACPlD,OAAQ,SACRyB,QAAS,OACT6B,cAAe,SACfC,gBAAiB,QACjBC,QAAS,GACTC,UAAW,uBACXC,aAAc,EACdtC,OAAQ,QAVZ,UAaE,cAAC+B,EAAD,CAAO3D,MAAO,CAAEmE,UAAW,UAA3B,iCACA,cAACtB,EAAD,IACA,cAAC,IAAD,IACA,cAACtB,EAAD,MAGL,E,QC5BK6C,EAAY,CAChBrD,OAAQ,GACRD,OAAQ,MACRE,WAAY,IA0BCqD,EAvBQ,WAAgC,IAA/B1D,EAA8B,uDAAtByD,EAAWE,EAAW,uCAEpD,OADAC,QAAQC,IAAI7D,EAAO2D,GACXA,EAAOjE,MACb,IAAK,6BACH,OAAO,2BACFM,GADL,IAEEI,OAAQuD,EAAOhE,UAEnB,IAAK,6BACH,OAAO,2BACFK,GADL,IAEEG,OAAQwD,EAAOhE,UAEnB,IAAK,+BACH,OAAO,2BACFK,GADL,IAEEK,WAAYsD,EAAOhE,UAEvB,QACE,OAAOK,EAEZ,E,OC3BKyD,EAAY,CAChB,CAAE3E,GAAI,EAAGH,KAAM,aAAcE,WAAW,EAAO8B,SAAU,UACzD,CAAE7B,GAAI,EAAGH,KAAM,cAAeE,WAAW,EAAM8B,SAAU,QACzD,CAAE7B,GAAI,EAAGH,KAAM,mBAAoBE,WAAW,EAAO8B,SAAU,QAmBlDmD,EAhBM,WAAgC,IAA/B9D,EAA8B,uDAAtByD,EAAWE,EAAW,uCAElD,OADAC,QAAQC,IAAI7D,EAAO2D,GACXA,EAAOjE,MACb,IAAK,mBACH,MAAM,GAAN,mBAAWM,GAAX,CAAkB2D,EAAOhE,UAC3B,IAAK,4BACH,OAAOK,EAAMoB,KAAI,SAACZ,GAAD,OACfA,EAAK1B,KAAO6E,EAAOhE,QAAnB,2BACSa,GADT,IACe3B,WAAY2B,EAAK3B,YAC5B2B,CAHW,IAKnB,QACE,OAAOR,EAEZ,ECJc+D,EALKC,0BAAgB,CAClC9D,QAASwD,EACTzD,SAAU6D,I,SCTNG,EAAmBC,gCAGVC,EAFDC,sBAAYL,EAAaE,GCEvCI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,Q","file":"static/js/main.e5d04886.chunk.js","sourcesContent":["import { Row, Tag, Checkbox } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleTodoStatus } from \"../../redux/actions\";\r\n\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, prioriry, completed, id }) {\r\n  const dispatch = useDispatch()\r\n  const [checked, setChecked] = useState(completed);\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(toggleTodoStatus(id))\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[prioriry]} style={{ margin: 0 }}>\r\n        {prioriry}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","export const addTodo = (data) => {\r\n  return {\r\n    type: \"todoList/addTodo\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const searchFilterChange = (text) => {\r\n  return {\r\n    type: \"filters/searchFilterChange\",\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const statusFilterChange = (status) => {\r\n  return {\r\n    type: \"filters/statusFilterChange\",\r\n    payload: status,\r\n  };\r\n};\r\nexport const toggleTodoStatus = (todoId) => {\r\n  return {\r\n    type: \"filters/toggleTodoStatus\",\r\n    payload: todoId\r\n  };\r\n};\r\nexport const priorityFilterChange = (priorities) => {\r\n  return {\r\n    type: \"filters/priorityFilterChange\",\r\n    payload: priorities,\r\n  };\r\n};\r\n","import { createSelector } from \"reselect\";\r\nexport const todoListSelector = (state) => state.todoList;\r\nexport const filterStatusSelector = (state) => state.filters.status;\r\nexport const searchTextSelector = (state) => state.filters.search;\r\nexport const filterPrioritiesSelector = (state) => state.filters.priorities;\r\n\r\nexport const todosRemeaningSelector = createSelector(\r\n  todoListSelector,\r\n  filterStatusSelector,\r\n  searchTextSelector,\r\n  filterPrioritiesSelector,\r\n  (todoList, status, searchText, priorities) => {\r\n    return todoList.filter((todo) => {\r\n      //   console.log(\"priorities before: \", priorities);\r\n      if (status === \"All\") {\r\n        // console.log(\"priorities: \", priorities);\r\n        // console.log(\"todo.priority: \", todo.priority);\r\n        return priorities.length\r\n          ? todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n          : todo.name.includes(searchText);\r\n      }\r\n      return (\r\n        todo.name.includes(searchText) &&\r\n        (status === \"Completed\" ? todo.completed : !todo.completed) &&\r\n        (priorities.length ? priorities.includes(todo.priority) : true)\r\n      );\r\n    });\r\n  }\r\n);\r\n","import { Col, Row, Input, Button, Select, Tag } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux/es/exports\";\r\nimport { addTodo } from \"../../redux/actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Todo from \"../Todo\";\r\nimport { useState } from \"react\";\r\nimport { todosRemeaningSelector } from \"../../redux/selectors\";\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState();\r\n  const [priority, setPriority] = useState(\"Medium\");\r\n  const dispatch = useDispatch();\r\n\r\n  // lấy ra các dữ liệu trong store\r\n  const todoList = useSelector(todosRemeaningSelector);\r\n  // const searchText = useSelector(searchTextSelector)\r\n\r\n  const handleAddButtonClick = () => {\r\n    //dispatch action\r\n    dispatch(\r\n      addTodo({\r\n        id: uuidv4(),\r\n        name: todoName,\r\n        priority: priority,\r\n        completed: false,\r\n      })\r\n    );\r\n\r\n    setTodoName(\"\");\r\n    setPriority(\"Medium\");\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value);\r\n  };\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value);\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: \"calc(100% - 40px)\" }}>\r\n      <Col span={24} style={{ height: \"calc(100% - 40px)\", overflowY: \"auto\" }}>\r\n        {/* <Todo name=\"Learn React\" prioriry=\"High\" />\r\n        <Todo name=\"Learn Redux\" prioriry=\"Medium\" />\r\n        <Todo name=\"Learn JavaScript\" prioriry=\"Low\" /> */}\r\n        {todoList.map((todo) => (\r\n          <Todo\r\n            id = {todo.id}\r\n            key={todo.id}\r\n            name={todo.name}\r\n            prioriry={todo.priority}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: \"flex\" }} compact>\r\n          <Input value={todoName} onChange={handleInputChange} />\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            value={priority}\r\n            onChange={handlePriorityChange}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleAddButtonClick}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { priorityFilterChange, searchFilterChange, statusFilterChange } from \"../../redux/actions\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [filterStatus, setFilterStatus] = useState(\"All\")\r\n  const [filterPriorities, setFilterPriorities] = useState([])\r\n\r\n  const handleSearchTextChange = (e) => {\r\n    setSearchText(e.target.value);\r\n    dispatch(searchFilterChange(e.target.value))\r\n  };\r\n\r\n  const handleStatusChange = (e) => {\r\n    setFilterStatus(e.target.value)\r\n    dispatch(statusFilterChange(e.target.value))\r\n  }\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setFilterPriorities(value)\r\n    dispatch(priorityFilterChange(value))\r\n  }\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"input search text\"\r\n          value={searchText}\r\n          onChange={handleSearchTextChange}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: \"bold\", marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please select\"\r\n          style={{ width: \"100%\" }}\r\n          value = {filterPriorities}\r\n          onChange = {handlePriorityChange}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Filters from './components/Filters';\n\nconst { Title } = Typography;\n\nfunction App() {\n  return (\n    <div\n      style={{\n        width: 500,\n        margin: '0 auto',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: 'white',\n        padding: 20,\n        boxShadow: '0 0 10px 4px #bfbfbf',\n        borderRadius: 5,\n        height: '90vh',\n      }}\n    >\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\n      <Filters />\n      <Divider />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const initState = {\r\n  search: \"\",\r\n  status: \"All\",\r\n  priorities: [],\r\n};\r\n\r\nconst filtersReducer = (state = initState, action) => {\r\n  console.log(state, action);\r\n  switch (action.type) {\r\n    case \"filters/searchFilterChange\":\r\n      return {\r\n        ...state,\r\n        search: action.payload,\r\n      };\r\n    case \"filters/statusFilterChange\":\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    case \"filters/priorityFilterChange\":\r\n      return {\r\n        ...state,\r\n        priorities: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filtersReducer;\r\n","const initState = [\r\n  { id: 1, name: \"Learn yoga\", completed: false, priority: \"Medium\" },\r\n  { id: 2, name: \"Learn Redux\", completed: true, priority: \"High\" },\r\n  { id: 3, name: \"Learn JavaScript\", completed: false, priority: \"low\" },\r\n];\r\n\r\nconst todosReducer = (state = initState, action) => {\r\n  console.log(state, action);\r\n  switch (action.type) {\r\n    case \"todoList/addTodo\":\r\n      return [...state, action.payload];\r\n    case \"todoList/toggleTodoStatus\":\r\n      return state.map((todo) =>\r\n        todo.id === action.payload\r\n          ? { ...todo, completed: !todo.completed }\r\n          : todo\r\n      );\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","import { combineReducers } from 'redux';\r\nimport filtersReducer from '../components/Filters/FiltersSlice'\r\nimport todosReducer from '../components/TodoList/todosSlice'\r\n\r\n// const rootReducer = (state = {}, action) => {\r\n//   return{\r\n//       filters:filtersReducer(state.filters, action),\r\n//       todoList: todosReducer(state.todoList, action)\r\n//   }\r\n// };\r\n\r\nconst rootReducer = combineReducers({\r\n  filters: filtersReducer,\r\n  todoList: todosReducer\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst composeEnhancers = composeWithDevTools();\r\nconst store = createStore(rootReducer, composeEnhancers);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}